name: Release

on:
  push:
    branches: [ "main" ]
    tags:
      - v*

env:
  REGISTRY_NAME: fonsecabarreto
  IMAGE_NAME: gpicm-nestjs-app

jobs:
  #pushToDockerHub:
  #  runs-on: ubuntu-latest
  #  steps:
  #  - uses: actions/checkout@v3
  #    with:
  #      submodules: true
  #  - run: docker build -f ./Dockerfile --target production --tag $REGISTRY_NAME/$IMAGE_NAME ./
  #  - run: echo "${{secrets.DOCKERHUB_PASSWORD}}" | docker login -u ${{secrets.DOCKERHUB_USERNAME}} --password-stdin
  #  - run: docker push $REGISTRY_NAME/$IMAGE_NAME:latest

  deploy:
    #needs: pushToDockerHub
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Enable debug logging
        run: echo "DEBUG=true" >> $GITHUB_ENV

      - name: Create .ovpn file from secrets
        run: echo "$CLIENT_OVPN" > .github/vpn/config.ovpn
        env:
          CLIENT_OVPN: ${{ secrets.CLIENT_OVPN }}

      - name: Set permissions for config.ovpn
        run: chmod 644 .github/vpn/config.ovpn

      - name: Display client.ovpn contents
        run: cat .github/workflows/client.ovpn

      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      - name: Connect VPN
        uses: golfzaptw/action-connect-ovpn@master
        id: connect_vpn
        with: 
          PING_URL: '10.77.0.99'
          FILE_OVPN: '.github/vpn/config.ovpn'
          TLS_KEY: ${{ secrets.TLS_KEY }}
          #SECRET: ${{ secrets.SECRET_USERNAME_PASSWORD }}
        env:
          CA_CRT: ${{ secrets.OVPN_CA}}
          USER_CRT: ${{ secrets.OVPN_CERT }}
          USER_KEY: ${{ secrets.OVPN_CLIENT_KEY }}
      - name: Check Connect VPN
        run: echo ${{ steps.connect_vpn.outputs.STATUS }}
      - name: kill vpn
        if: always()
        run: sudo killall openvpn

     
      #- name: Execute remote commands via SSH
      #  uses: appleboy/ssh-action@master
      #  with:
      #    host: ${{ secrets.HOST }}
      #    username: ${{ secrets.HOST_USERNAME }}
      #    password: ${{ secrets.HOST_PASSWORD }}
      #    port: 22
      #    script: |
      #      whoami
      #      ls -al
  #
      #- name: Kill VPN connection
      #  if: always()
      #  run: |
      #    sudo killall openvpn          