name: Release

on:
  push:
    branches: 
      - "main"
    tags:
      - v*

env:
  REGISTRY_NAME: fonsecabarreto
  IMAGE_NAME: gpicm-nestjs-app
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  #pushToDockerHub:
  #  runs-on: ubuntu-latest
  #  steps:
  #  - uses: actions/checkout@v3
  #    with:
  #      submodules: true
  #  - run: docker build -f ./Dockerfile --target production --tag $REGISTRY_NAME/$IMAGE_NAME ./
  #  - run: echo "${{secrets.DOCKERHUB_PASSWORD}}" | docker login -u ${{secrets.DOCKERHUB_USERNAME}} --password-stdin
  #  - run: docker push $REGISTRY_NAME/$IMAGE_NAME:latest

  deploy:
    #needs: pushToDockerHub

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Enable debug logging
        run: echo "DEBUG=true" >> $GITHUB_ENV

      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved
          sudo systemctl enable openvpn

      - name: Create .ovpn file from secrets
        run: echo "$CLIENT_OVPN" > .github/vpn/config.ovpn
        env:
          CLIENT_OVPN: ${{ secrets.CLIENT_OVPN }}

      - name: Create .password file from secrets
        run: echo "$OVPN_PASSWORD" > .github/vpn/my_auth_pass.txt
        env:
          OVPN_PASSWORD: ${{ secrets.OVPN_PASSWORD }}

      - name: Set permissions for config.ovpn
        run: chmod 644 .github/vpn/config.ovpn

      - name: Set permissions for my_auth_pass.txt
        run: chmod 600 .github/vpn/my_auth_pass.txt

      - name: Display client.ovpn contents
        run: cat .github/vpn/config.ovpn

      - name: Display password contents
        run: cat .github/vpn/my_auth_pass.txt

      - name: Modify .ovpn to increase verbosity
        run: echo "verb 4" >> .github/vpn/config.ovpn

      - name: Connect to VPN
        run: |
          sudo openvpn --config .github/vpn/config.ovpn --auth-nocache --verb 4 --askpass .github/vpn/my_auth_pass.txt &
          # Wait for OpenVPN to establish connection
          sleep 10

      - name: Check VPN connection status
        run: |
          sudo systemctl status openvpn
          sudo journalctl -u openvpn

      - name: Verify VPN connectivity
        run: |
          curl -I https://ifconfig.me

      #- name: Copy file via SSH key
      #  uses: appleboy/scp-action@v0.1.4
      #  with:
      #    port: 22
      #    host: ${{ secrets.HOST }}
      #    username: ${{ secrets.HOST_USERNAME }}
      #    password: ${{ secrets.HOST_PASSWORD }}
      #    source: "./docker-compose.prod.yml"
      #    target: "/usr/app"
      #    debug: true  # Enable debugging for more verbose output

      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          port: 22
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          envs: WEB_IMAGE_NAME, IMAGE_NAME, REGISTRY_NAME, DOCKERHUB_PASSWORD, DOCKERHUB_USERNAME, APP_ENVS
          script: |
            rm -f .env &&
            echo "${{ secrets.APP_ENVS }}" | base64 -d > .env
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            docker compose -f /usr/app/docker-compose.prod.yml down &&
            docker image prune -f &&
            docker compose -f /usr/app/docker-compose.prod.yml pull &&
            docker compose --env-file ./.env -f /usr/app/docker-compose.prod.yml up --build -d

      - name: Kill VPN
        if: always()
        run: sudo killall openvpn
