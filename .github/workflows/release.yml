name: Release

on:
  push:
    branches: [ "main" ]
    tags:
      - v*

env:
  REGISTRY_NAME: fonsecabarreto
  IMAGE_NAME: gpicm-nestjs-app

jobs:
  pushToDockerHub:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - run: docker build -f ./Dockerfile --target production --tag $REGISTRY_NAME/$IMAGE_NAME ./
    - run: echo "${{secrets.DOCKERHUB_PASSWORD}}" | docker login -u ${{secrets.DOCKERHUB_USERNAME}} --password-stdin
    - run: docker push $REGISTRY_NAME/$IMAGE_NAME:latest

  deploy:
    needs: pushToDockerHub
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      - name: Setup VPN config
        run: |
          echo "${{ secrets.OVPN_CA }}" > ca.crt
          echo "${{ secrets.OVPN_CERT }}" > user.crt

      - name: Establish VPN connection
        run: |
            echo "${{ secrets.VPN_CONFIG }}" > vpn-config.ovpn
            echo "${{ secrets.OVPN_USERNAME }}" > vpn-credentials.txt
            echo "${{ secrets.OVPN_PASSWORD }}" >> vpn-credentials.txt
            sudo openvpn --config vpn-config.ovpn --auth-user-pass vpn-credentials.txt --daemon
            sleep 15

      - name: Check VPN connection
        run: |
          if ip addr show | grep -q "tun0"; then
            echo "VPN connected"
          else
            echo "VPN not connected" && exit 1
          fi

      - name: Execute remote commands via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          port: 22
          script: |
            whoami
            ls -al

      - name: Kill VPN connection
        if: always()
        run: |
          sudo killall openvpn          